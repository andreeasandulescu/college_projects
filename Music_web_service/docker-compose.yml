version: '3'
 
services:
  musicserver:
    image: musicserver
    hostname: musicserver
    ports:
     - 5000:5000
    restart: always
    volumes:
      - ./Music_server:/app
    depends_on:
      - redis
      - database
      - musicworker
    networks:
      - service-network

  musicworker:
    image: musicworker
    hostname: musicworker
    restart: always
    volumes:
      - ./Music_worker:/app
    depends_on:
      - redis
      - database
    networks:
      - service-network

  redis:
    image: redis:4.0.11-alpine
    hostname: redis
    ports:
     - 6379:6379
    restart: always
    networks:
      - service-network

  database:
    image: mysql:5.5
    hostname: database
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./Database:/var/lib/mysql
    networks:
      - service-network

  visualizer:
    image: dockersamples/visualizer
    deploy:
      placement:
        constraints: [node.role == manager]
    ports:
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  service-network:
    driver: overlay